/*
 * Generated by classgen, version 1.5
 * 11.10.13 11:54
 */
package de.brainiiiii.sqlgen;

public abstract class VisitorAdaptor implements Visitor {

  public void visit(ProjectDeklBlockList projectDeklBlockList) { visit(); }
  public void visit(StringList stringList) { visit(); }
  public void visit(ColumnDeklList columnDeklList) { visit(); }
  public void visit(IndexDeklList indexDeklList) { visit(); }
  public void visit(SqlSelectColumnList sqlSelectColumnList) { visit(); }
  public void visit(SqlSelectSourceList sqlSelectSourceList) { visit(); }
  public void visit(SqlOrderElementList sqlOrderElementList) { visit(); }
  public void visit(Project project) { visit(); }
  public void visit(IndexDekl indexDekl) { visit(); }
  public void visit(SqlSelectSource sqlSelectSource) { visit(); }
  public void visit(SqlSelectColumn sqlSelectColumn) { visit(); }
  public void visit(SqlOrderElement sqlOrderElement) { visit(); }
  public void visit(SqlSelect sqlSelect) { visit(); }
  public void visit(PackageDekl packageDekl) { visit(); }
  public void visit(PackageDekl0 packageDekl0) { visit(); }
  public void visit(PackageDekl1 packageDekl1) { visit(); }
  public void visit(ProjectDeklBlock projectDeklBlock) { visit(); }
  public void visit(EnumDekl enumDekl) { visit(); }
  public void visit(TableDekl tableDekl) { visit(); }
  public void visit(SelectDekl selectDekl) { visit(); }
  public void visit(ColumnDekl columnDekl) { visit(); }
  public void visit(SingleColumnDekl singleColumnDekl) { visit(); }
  public void visit(ArrayColumnDekl arrayColumnDekl) { visit(); }
  public void visit(DefaultValue defaultValue) { visit(); }
  public void visit(DefaultAuto defaultAuto) { visit(); }
  public void visit(DefaultConstNull defaultConstNull) { visit(); }
  public void visit(DefaultConstInt defaultConstInt) { visit(); }
  public void visit(DefaultConstString defaultConstString) { visit(); }
  public void visit(DefaultConstBool defaultConstBool) { visit(); }
  public void visit(ColumnDeklType columnDeklType) { visit(); }
  public void visit(NullableColumnDekl nullableColumnDekl) { visit(); }
  public void visit(NonNullableColumnDekl nonNullableColumnDekl) { visit(); }
  public void visit(IDType iDType) { visit(); }
  public void visit(StringType stringType) { visit(); }
  public void visit(IntType intType) { visit(); }
  public void visit(BooleanType booleanType) { visit(); }
  public void visit(CharType charType) { visit(); }
  public void visit(DoubleType doubleType) { visit(); }
  public void visit(TextType textType) { visit(); }
  public void visit(DateType dateType) { visit(); }
  public void visit(DateTimeType dateTimeType) { visit(); }
  public void visit(TimeType timeType) { visit(); }
  public void visit(EnumType enumType) { visit(); }
  public void visit(TableReferenceType tableReferenceType) { visit(); }
  public void visit(ColumnReferenceType columnReferenceType) { visit(); }
  public void visit(SqlExpr sqlExpr) { visit(); }
  public void visit(SqlColumnExpr sqlColumnExpr) { visit(); }
  public void visit(SqlConstStringExpr sqlConstStringExpr) { visit(); }
  public void visit(SqlParamExpr sqlParamExpr) { visit(); }
  public void visit(SqlNullExpr sqlNullExpr) { visit(); }
  public void visit(SqlConstBoolExpr sqlConstBoolExpr) { visit(); }
  public void visit(SqlLimit sqlLimit) { visit(); }
  public void visit(SqlSpecLimit sqlSpecLimit) { visit(); }
  public void visit(SqlNoLimit sqlNoLimit) { visit(); }

  public void visit() { }

}
