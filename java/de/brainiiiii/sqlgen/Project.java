/*
 * Generated by classgen, version 1.5
 * 11.10.13 11:54
 */
package de.brainiiiii.sqlgen;

public class Project implements SyntaxNode {

  private SyntaxNode parent;
  public String ident;
  public PackageDekl pckg;
  public ProjectDeklBlockList blocks;

  public Project (String ident, PackageDekl pckg, ProjectDeklBlockList blocks) {
    this.ident = ident;
    this.pckg = pckg;
    if (pckg != null) pckg.setParent(this);
    this.blocks = blocks;
    if (blocks != null) blocks.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (pckg != null) pckg.accept(visitor);
    if (blocks != null) blocks.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (pckg != null) pckg.traverseTopDown(visitor);
    if (blocks != null) blocks.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (pckg != null) pckg.traverseBottomUp(visitor);
    if (blocks != null) blocks.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Project(\n");
    buffer.append("  "+tab+ident);
    buffer.append("\n");
      if (pckg != null)
        buffer.append(pckg.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (blocks != null)
        buffer.append(blocks.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Project]");
    return buffer.toString();
  }
}
